Train dataset size: 5953
Validation dataset size: 525
Sample shape: torch.Size([4, 384, 384, 20]), dtype: torch.float32. maximum value: 0.9960784912109375, minimum value: 0.0
Sample shape: torch.Size([4, 384, 384, 20]), dtype: torch.float32. maximum value: 0.960784375667572, minimum value: 0.0
Epoch 1/15 [Train]:  47%|███████████████████████████████████████████▏                                                | 2796/5953 [16:15<18:21,  2.87it/s, Loss=0.0143]
Traceback (most recent call last):
  File "/home/vatsal/NWM/fno_sevir/fno_sevir2.py", line 95, in <module>
    for batch_idx, data in pbar:
                           ^^^^
  File "/home/vatsal/NWM/SSBware/senv/lib/python3.13/site-packages/tqdm/std.py", line 1181, in __iter__
    for obj in iterable:
               ^^^^^^^^
  File "/home/vatsal/NWM/fno_sevir/fno_dataset.py", line 760, in __next__
    ret_dict = self._sequent_sample()
  File "/home/vatsal/NWM/fno_sevir/fno_dataset.py", line 981, in _sequent_sample
    event_batch = self._load_event_batch(event_idx=start_event_idx,
                                         event_batch_size=event_batch_size)
  File "/home/vatsal/NWM/fno_sevir/fno_dataset.py", line 745, in _load_event_batch
    event_batch = [data[t].astype(self.output_type) for t in self.data_types]
                   ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Exception ignored in atexit callback <function _start_and_connect_service.<locals>.teardown_atexit at 0x75760a9a0e00>:
Traceback (most recent call last):
  File "/home/vatsal/NWM/SSBware/senv/lib/python3.13/site-packages/wandb/sdk/lib/service_connection.py", line 94, in teardown_atexit
    conn.teardown(hooks.exit_code)
  File "/home/vatsal/NWM/SSBware/senv/lib/python3.13/site-packages/wandb/sdk/lib/service_connection.py", line 226, in teardown
    self._router.join()
  File "/home/vatsal/NWM/SSBware/senv/lib/python3.13/site-packages/wandb/sdk/interface/router.py", line 75, in join
    self._thread.join()
  File "/home/vatsal/miniconda3/lib/python3.13/threading.py", line 1092, in join
    self._handle.join(timeout)
KeyboardInterrupt:
