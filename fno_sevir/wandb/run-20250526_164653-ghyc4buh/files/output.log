Train dataset size: 5953
Validation dataset size: 525
Sample shape: torch.Size([4, 384, 384, 20]), dtype: torch.float32. maximum value: 0.9960784912109375, minimum value: 0.0
Sample shape: torch.Size([4, 384, 384, 20]), dtype: torch.float32. maximum value: 0.960784375667572, minimum value: 0.0
Epoch 1/3 [Train]:   1%|‚ñè                    | 67/5953 [00:35<51:35,  1.90it/s, Loss=0.0807]
Traceback (most recent call last):
  File "/home/vatsal/NWM/fno_sevir/fno_vae_train.py", line 139, in <module>
    encoded_input = encode_vae(input_frames, vae_model)
                    ^^^^^^^^^^^^^^^^^^^^
  File "/home/vatsal/NWM/SSBware/senv/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/vatsal/NWM/SSBware/senv/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/vatsal/NWM/SSBware/senv/lib/python3.13/site-packages/neuralop/models/fno.py", line 378, in forward
    x = self.fno_blocks(x, layer_idx, output_shape=output_shape[layer_idx])
  File "/home/vatsal/NWM/SSBware/senv/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/vatsal/NWM/SSBware/senv/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/vatsal/NWM/SSBware/senv/lib/python3.13/site-packages/neuralop/layers/fno_block.py", line 277, in forward
    return self.forward_with_postactivation(x, index, output_shape)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vatsal/NWM/SSBware/senv/lib/python3.13/site-packages/neuralop/layers/fno_block.py", line 301, in forward_with_postactivation
    x = self.non_linearity(x)
KeyboardInterrupt
