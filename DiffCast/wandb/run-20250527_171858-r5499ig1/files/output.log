============================================================
                 Experiment Start
============================================================
Distributed environment: NO
Num processes: 1
Process index: 0
Local process index: 0
Device: cuda

Mixed precision type: bf16

train data: 29765, valid data: 7036, test_data: 1805
Pixel Scale: 255.0, Threshold: (16, 74, 133, 160, 181, 219)
Main Model Parameters: 48.89M
============ Running training ============
    Num examples = 29765
    Num Epochs = 2
    Instantaneous batch size per GPU = 2
    Total train batch size (w. parallel, distributed & accumulation) = 2
    Total optimization steps = 59530
optimizer: AdamW (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.95)
    capturable: False
    decoupled_weight_decay: True
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    initial_lr: 0.0001
    lr: 0.0
    maximize: False
    weight_decay: 0.0
) with init lr: 0.0001
Data Loading Time: 0.20518732070922852
True
gpu_nums: 1, gpu_id: 0
sampling frags::   0%|                                                   | 0/1 [00:11<?, ?it/s]
Traceback (most recent call last):                                       | 0/1 [00:00<?, ?it/s]
  File "/home/vatsal/NWM/DiffCast/run.py", line 577, in <module>
    main()
  File "/home/vatsal/NWM/DiffCast/run.py", line 566, in main
    exp.train()
  File "/home/vatsal/NWM/DiffCast/run.py", line 421, in train
    loss_dict = self._train_batch(batch)
  File "/home/vatsal/NWM/DiffCast/run.py", line 489, in _train_batch
    _, loss = self.model.predict(frames_in=frames_in, frames_gt=frames_out, compute_loss=True)
  File "/home/vatsal/NWM/DiffCast/models/diffcast.py", line 951, in predict
    pred, mu, y = self.sample(frames_in=frames_in, T_out=T_out)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/home/vatsal/NWM/DiffCast/models/diffcast.py", line 929, in sample
    frag_pred = y + mu
RuntimeError: The size of tensor a (13) must match the size of tensor b (12) at non-singleton dimension 1
