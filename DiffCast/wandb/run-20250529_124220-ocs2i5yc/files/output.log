============================================================
                 Experiment Start
============================================================
Distributed environment: NO
Num processes: 1
Process index: 0
Local process index: 0
Device: cuda

Mixed precision type: bf16

train data: 71436, valid data: 16887, test_data: 20
Pixel Scale: 255.0, Threshold: (16, 74, 133, 160, 181, 219)
Main Model Parameters: 48.87M
============ Running training ============
    Num examples = 71436
    Num Epochs = 1
    Instantaneous batch size per GPU = 1
    Total train batch size (w. parallel, distributed & accumulation) = 1
    Total optimization steps = 71436
optimizer: AdamW (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.95)
    capturable: False
    decoupled_weight_decay: True
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    initial_lr: 0.0001
    lr: 0.0
    maximize: False
    weight_decay: 0.0
) with init lr: 0.0001
Data Loading Time: 0.13121700286865234
True
gpu_nums: 1, gpu_id: 0
Epoch 0/1, Step 655/71436:   1%|█▏                                                                                                                         | 656/71436 [03:27<6:28:07,  3.04it/s, lr=6.56e-5, total_loss=0.0497]Traceback (most recent call last):
backbone_net.torch_nn_module.decoder.cross_blocks.0.0.ffn_l.0.ffn_1.weight
backbone_net.torch_nn_module.decoder.cross_blocks.0.0.ffn_l.0.ffn_1.bias
backbone_net.torch_nn_module.decoder.cross_blocks.0.0.ffn_l.0.ffn_2.weight
backbone_net.torch_nn_module.decoder.cross_blocks.0.0.ffn_l.0.ffn_2.bias
  File "/home/vatsal/NWM/DiffCast/run.py", line 567, in <module>
  File "/home/vatsal/NWM/DiffCast/run.py", line 556, in main
    self.test_samples(milestones[m], do_test=True)
  File "/home/vatsal/NWM/DiffCast/run.py", line 409, in train
    loss_dict = self._train_batch(batch)
  File "/home/vatsal/NWM/DiffCast/run.py", line 477, in _train_batch
    # frame_seq = batch['vil'].unsqueeze(2).to(self.device)
  File "/home/vatsal/NWM/DiffCast/models/diffcast.py", line 952, in predict
    loss = self._predict(frames_in, frames_gt)
  File "/home/vatsal/NWM/DiffCast/models/diffcast.py", line 972, in _predict
    global_ctx, local_ctx = self.ctx_net.scan_ctx(torch.cat((frames_in, backbone_output), dim=1))
  File "/home/vatsal/NWM/DiffCast/models/diffcast.py", line 434, in scan_ctx
    globla_ctx = self.forward(frames[:,i])
  File "/home/vatsal/NWM/DiffCast/models/diffcast.py", line 417, in forward
    x = self.init_conv(x)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 554, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 549, in _conv_forward
    return F.conv2d(
KeyboardInterrupt
Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/threading.py", line 1080, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
