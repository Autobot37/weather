============================================================
                 Experiment Start
============================================================
Distributed environment: NO
Num processes: 1
Process index: 0
Local process index: 0
Device: cuda

Mixed precision type: bf16

train data: 10000, valid data: 19701, test_data: 20
Pixel Scale: 255.0, Threshold: (16, 74, 133, 160, 181, 219)
Main Model Parameters: 46.30M
============ Running training ============
    Num examples = 10000
    Num Epochs = 1
    Instantaneous batch size per GPU = 1
    Total train batch size (w. parallel, distributed & accumulation) = 1
    Total optimization steps = 10000
optimizer: AdamW (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.95)
    capturable: False
    decoupled_weight_decay: True
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    initial_lr: 0.0001
    lr: 0.0
    maximize: False
    weight_decay: 0.0
) with init lr: 0.0001
Data Loading Time: 0.1200411319732666
True
gpu_nums: 1, gpu_id: 0
Load checkpoint /home/vatsal/NWM/DiffCast/Exps/basic_exps/Difffno_sevir_None/checkpoints/ckpt-10000.pt from /home/vatsal/NWM/DiffCast/Exps/basic_exps/Difffno_sevir_None/checkpoints
milestones: [10000]
Load checkpoint /home/vatsal/NWM/DiffCast/Exps/basic_exps/Difffno_sevir_None/checkpoints/ckpt-10000.pt from /home/vatsal/NWM/DiffCast/Exps/basic_exps/Difffno_sevir_None/checkpoints
sampling frags:: 0it [00:00, ?it/s]                                                                                                                                            | 0/20 [00:00<?, ?it/s]
0
backbone_output shape: torch.Size([2, 5, 1, 384, 384])
frames_in shape: torch.Size([2, 10, 1, 384, 384])
tout : 5
T_in: 10
Test Samples:   0%|                                                                                                                                                            | 0/20 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/home/vatsal/NWM/DiffCast/run.py", line 567, in <module>
    main()
  File "/home/vatsal/NWM/DiffCast/run.py", line 558, in main
    exp.check_milestones(target_ckpt=args.ckpt_milestone)
  File "/home/vatsal/NWM/DiffCast/run.py", line 544, in check_milestones
    self.test_samples(saved_dir_name, do_test=True)
  File "/home/vatsal/NWM/DiffCast/run.py", line 516, in test_samples
    radar_ori, radar_recon= self._sample_batch(batch)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/home/vatsal/NWM/DiffCast/run.py", line 489, in _sample_batch
    radar_pred, _ = sample_fn(radar_input,compute_loss=False)
  File "/home/vatsal/NWM/DiffCast/models/diffcast.py", line 962, in predict
    pred, mu, y = self.sample(frames_in=frames_in, T_out=T_out)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/home/vatsal/NWM/DiffCast/models/diffcast.py", line 944, in sample
    frames_pred = self.unnormalize(torch.cat(frames_pred, dim=1))
RuntimeError: torch.cat(): expected a non-empty list of Tensors
