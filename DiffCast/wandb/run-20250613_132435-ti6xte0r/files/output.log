============================================================
                 Experiment Start
============================================================
Distributed environment: NO
Num processes: 1
Process index: 0
Local process index: 0
Device: cuda

Mixed precision type: no

Loading data
train data: 9921, valid data: 20, test_data: 20
Pixel Scale: 255.0, Threshold: (16, 74, 133, 160, 181, 219)
[32mBatch Shape: torch.Size([6, 25, 1, 128, 128]), Type: torch.float32[0m
[32mBatch Shape: torch.Size([12, 25, 1, 128, 128]), Type: torch.float32[0m
[32mBatch Shape: torch.Size([12, 25, 1, 128, 128]), Type: torch.float32[0m
Building model
Main Model Parameters: 2.42M
============ Running training ============
    Num examples = 9921
    Num Epochs = 21
    Instantaneous batch size per GPU = 6
    Total train batch size (w. parallel, distributed & accumulation) = 6
    Total optimization steps = 208341
optimizer: AdamW (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.95)
    capturable: False
    decoupled_weight_decay: True
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    initial_lr: 1e-05
    lr: 0.0
    maximize: False
    weight_decay: 0.0
) with init lr: 1e-05
Data Loading Time: 0.3319401741027832
True
gpu_nums: 1, gpu_id: 0
Training Now
Epoch 0/21, Step 4160/9921:   2%|â–ˆâ–‹                                                                                   | 4161/208341 [07:31<5:30:40, 10.29it/s, lr=9.99e-6, total_loss=0.0171]Traceback (most recent call last):
  File "/home/vatsal/NWM/weather/DiffCast/run.py", line 591, in <module>
    main()
  File "/home/vatsal/NWM/weather/DiffCast/run.py", line 580, in main
    exp.train()
  File "/home/vatsal/NWM/weather/DiffCast/run.py", line 433, in train
    self.accelerator.clip_grad_norm_(self.model.parameters(), 1.0)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/accelerate/accelerator.py", line 2146, in clip_grad_norm_
    return torch.nn.utils.clip_grad_norm_(parameters, max_norm, norm_type=norm_type)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/utils/clip_grad.py", line 38, in _no_grad_wrapper
    return func(*args, **kwargs)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/utils/clip_grad.py", line 219, in clip_grad_norm_
    total_norm = _get_total_norm(grads, norm_type, error_if_nonfinite, foreach)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/utils/clip_grad.py", line 38, in _no_grad_wrapper
    return func(*args, **kwargs)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/utils/clip_grad.py", line 91, in _get_total_norm
    norms.extend(torch._foreach_norm(device_tensors, norm_type))
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/vatsal/NWM/weather/DiffCast/run.py", line 591, in <module>
    main()
  File "/home/vatsal/NWM/weather/DiffCast/run.py", line 580, in main
    exp.train()
  File "/home/vatsal/NWM/weather/DiffCast/run.py", line 433, in train
    self.accelerator.clip_grad_norm_(self.model.parameters(), 1.0)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/accelerate/accelerator.py", line 2146, in clip_grad_norm_
    return torch.nn.utils.clip_grad_norm_(parameters, max_norm, norm_type=norm_type)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/utils/clip_grad.py", line 38, in _no_grad_wrapper
    return func(*args, **kwargs)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/utils/clip_grad.py", line 219, in clip_grad_norm_
    total_norm = _get_total_norm(grads, norm_type, error_if_nonfinite, foreach)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/utils/clip_grad.py", line 38, in _no_grad_wrapper
    return func(*args, **kwargs)
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/site-packages/torch/nn/utils/clip_grad.py", line 91, in _get_total_norm
    norms.extend(torch._foreach_norm(device_tensors, norm_type))
KeyboardInterrupt
Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File "/home/vatsal/miniconda3/envs/earthformer/lib/python3.9/threading.py", line 1080, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
